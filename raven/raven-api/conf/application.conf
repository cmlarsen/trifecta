# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
application.secret="OeP02>w<4CBg^ZrP6:YGp1L:d4kqWr[v5fO0dViB_5dr00TE]7sj4_FOf]Q1E3RY"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
 application.global=app.Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#

#Cassandra
cassandra {
  host=[127.0.0.1]
  host=${?CASSANDRA_HOST}
  keyspace="raven"
}

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Osprey Client
services.osprey.uri = "http://localhost"
services.osprey.uri = ${?OSPREY_HOST}
services.osprey.port = "9001"
services.osprey.port = ${?OSPREY_PORT}

akka {
  fork-join-executor {
    // Allow for 3 threads per CPU
    parallelism-factor = 2.0
    // Require at least 3 threads be available
    parallelism-min = 1
    parallelism-max = 2
  }
}
